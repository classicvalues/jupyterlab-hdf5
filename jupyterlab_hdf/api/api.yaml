# Copyright (c) Jupyter Development Team.
# Distributed under the terms of the Modified BSD License.
#
# jupyterLab_hdf : HDF5 api for Jupyter/Jupyterlab

openapi: 3.0.0
info:
  title: JupyterLab HDF5 proxy
  description: "Proxies HDF5 API requests from JupyterLab to HDF5."
  version: 0.6.0

paths:
  /hdf/attrs/{fpath}{?uri}:
    parameters:
      - $ref: '#/components/parameters/fpath'
      - $ref: '#/components/parameters/uri'

    get:
      summary: "get the attributes of an hdf object"
      responses:
        '200':
          $ref: '#/components/responses/attrs'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'

  /hdf/contents/{fpath}{?uri}{?ixstr}{?min_ndim}:
    parameters:
      - $ref: '#/components/parameters/fpath'
      - $ref: '#/components/parameters/uri'
      - $ref: '#/components/parameters/ixstr'
      - $ref: '#/components/parameters/min_ndim'

    get:
      summary: "get the contents of an hdf object"
      responses:
        '200':
          $ref: '#/components/responses/contents'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'

  /hdf/data/{fpath}{?uri}{?ixstr}{?subixstr}{?min_ndim}:
    parameters:
      - $ref: '#/components/parameters/fpath'
      - $ref: '#/components/parameters/uri'
      - $ref: '#/components/parameters/ixstr'
      - $ref: '#/components/parameters/subixstr'
      - $ref: '#/components/parameters/min_ndim'

    get:
      summary: "get raw array data from one dataset, as a json blob"
      responses:
        '200':
          $ref: '#/components/responses/data'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'

  /hdf/meta/{fpath}{?uri}{?ixstr}{?min_ndim}:
    parameters:
      - $ref: '#/components/parameters/fpath'
      - $ref: '#/components/parameters/uri'
      - $ref: '#/components/parameters/ixstr'
      - $ref: '#/components/parameters/min_ndim'

    get:
      summary: "get the metadata of an hdf object. If dataset, all shape-related metadata will be for the slab specified by ixstr, if provided"
      responses:
        '200':
          $ref: '#/components/responses/meta'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'

  /hdf/snippet/{fpath}{?uri}:
    parameters:
      - $ref: '#/components/parameters/fpath'
      - $ref: '#/components/parameters/uri'
    get:
      summary: "Get a Python snippet that fetches the indicated dataset/group"
      responses:
        '200':
          $ref: '#/components/responses/py_snippet'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'


components:
  parameters:
    fpath:
      name: fpath
      in: path
      required: true
      description: "path on disk to an HDF5 file"
      schema:
        type: string
        format: uri
    ixstr:
      name: ixstr
      in: query
      required: false
      description: "index specifying which ND slab of a dataset to consider when fetching data. Uses numpy-style index syntax"
      schema:
        type: string
    subixstr:
      name: subixstr
      in: query
      required: false
      description: "index specifying which chunk (of the ND slab specified by ixstr) of a dataset to fetch. Uses numpy-style index syntax. The count of slices in ixstr and subixstr should match"
      schema:
        type: string
    min_ndim:
      name: min_ndim
      in: query
      required: false
      description: "if set, all shape-related metadata and array data fetched from a dataset will be promoted to have at least this many dimensions"
      schema:
        type: number
    uri:
      name: uri
      in: query
      required: true
      description: "path within an HDF5 file to a specific group or dataset"
      schema:
        type: string

  responses:
    '400':
      description: The request was malformed; url should be of the format "fpath?uri=uri"
    '401':
      description: The request did not specify a file that `h5py` could understand.
    '403':
      description: The request specified a file that does not exist.
    '500':
      description: Found and opened file, error getting contents from object specified by the uri.
    attrs:
      description: "attributes of an arbitrary hdf object, as a dictionary"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/attrs'
    contents:
      description: "data representing an arbitrary hdf object, in the format required by the jupyterlab `Contents` stack. May be either a single object or an array"
      content:
        application/json:
          schema:
            oneOf:
            - $ref: '#/components/schemas/contents'
            - type: array
              items:
                $ref: '#/components/schemas/contents'
    data:
      description: "slab of hdf5 dataset represented as list-of-list-of-number (always 2D)"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/data'
    meta:
      description: "metadata of an arbitrary hdf object, as a dictionary"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/meta'
    py_snippet:
      description: "python code snippet"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/py_snippet'

  schemas:
    attrs:
      description: "attributes of an arbitrary hdf object, as a dictionary"
      type: object
      additionalProperties: true
    contents:
      description: "data representing an arbitrary hdf object, in the format required by the jupyterlab `Contents` stack"
      required: [name, type, uri]
      type: object
      properties:
        content:
          $ref: '#/components/schemas/meta'
        name:
          description: "object name (ie last part of uri)"
          type: string
        type:
          description: "only `group` or `dataset` (for now)"
          type: string
        uri:
          description: "full uri pointing to the object"
          type: string
    data:
      description: "a chunk of raw array from an hdf dataset. May be of any dimensionality"
      type: array
      items:
        type: array
        items:
          type: number
    dataset_meta:
      description: "metadata of an hdf dataset, as a dictionary"
      required: [dtype, labels, name, ndim, shape, size, type]
      type: object
      properties:
        dtype:
          description: "datatype of an hdf dataset"
          type: string
        labels:
          description: "ranges that label the indices of an hdf dataset, given as an array of slices"
          type: array
          items:
            $ref: '#/components/schemas/slice'
        name:
          description: "name of hdf dataset"
          type: string
        ndim:
          description: "count of dimensions of an hdf dataset"
          type: number
        shape:
          description: "shape of an hdf dataset"
          type: array
          items:
            type: number
        size:
          description: "count of entries of an hdf dataset"
          type: number
        type:
          description: "the string literal 'dataset'"
          enum: ['dataset']
          type: string
    group_meta:
      description: "metadata of an hdf group, as a dictionary"
      required: [name, type]
      type: object
      properties:
        name:
          description: "name of hdf group"
          type: string
        type:
          description: "the string literal 'group'"
          enum: ['group']
          type: string
    meta:
      description: "the metadata of an hdf object"
      oneOf:
      - $ref: '#/components/schemas/dataset_meta'
      - $ref: '#/components/schemas/group_meta'
      discriminator:
        propertyName: type
        mapping:
          dataset_meta: '#/components/schemas/dataset_meta'
          group_meta: '#/components/schemas/group_meta'
    py_snippet:
      description: "python code snippet"
      type: string
    slice:
      description: "python-style slice"
      required: [start, stop, step]
      type: object
      properties:
        start:
          description: "first index of the slice"
          type: number
        stop:
          description: "one past the last index of the slice"
          type: number
        step:
          description: "step of the slice"
          type: number
